build: off

os: unstable

skip_tags: true

environment:
  matrix:
    - nodejs_version: "6"
      test: "normal"
    - nodejs_version: "6"
      test: "integration"
    - nodejs_version: "8"
      test: "integration"
    - nodejs_version: "8"
      test: "normal"

platform:
  - x64

cache:
  - node_modules -> appveyor.yml
  - '%APPDATA%\npm\node_modules -> appveyor.yml'
  - '%APPDATA%\npm-cache -> appveyor.yml'
  - '%USERPROFILE%\.electron -> appveyor.yml'
  - '%LOCALAPPDATA%\Yarn -> appveyor.yml'
  - '%LOCALAPPDATA%\.meteor -> appveyor.yml'
  - tests/.__tmp_int -> appveyor.yml

install:
  - ps: Install-Product node $env:nodejs_version
  - npm install -g npm@5
  - npm prune
  - npm install
  - ps: >-
      if ($env:test -eq "integration") {
        if ((Get-Command "meteor" -ErrorAction SilentlyContinue) -eq $null) {
          choco install meteor --params "'/RELEASE:1.4.2.7'"
        }
      }
  - ps: refreshenv
  - refreshenv

# Post-install test scripts.
test_script:
  - node --version
  - npm --version
  - if %test%==integration meteor --version
  - if not %test%==integration npm test
  - if %test%==integration npm run prepare-integration-tests
  - if %test%==integration cd C:\Users\appveyor\AppData\Local\.meteor\packages\meteor-tool\1.4.2_7\mt-os.windows.x86_32\dev_bundle\lib\node_modules\cordova-lib\node_modules\npm\node_modules\request\node_modules\har-validator\node_modules\is-my-json-valid && rmdir /S /Q node_modules && npm install
  - if %test%==integration npm run test-integration

# cache clear
